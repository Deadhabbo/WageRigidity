}
}
library(tidyverse)
library(rio)
# Define the years, months, and the variable names of interest
years <- 2009:2015
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
VARS_OF_INTEREST <- c("ro", "ho", "re", "he", "c", "nt")
MONTHS_DICT <- setNames(sprintf("%02d", 1:12), tolower(MONTHS)) ## Previous %02d
##print(months_dict)
# Base path for your data
base_path <- "./wage rigidity/_data/_IRCMO"
# # Function to rename columns
rename_month_columns <- function(data_frame) {
# Create a vector to map month names to numbers
months <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
# Get the names of the dataframe columns
column_names <- names(data_frame)
# Iterate over column names
for (col_name in column_names) {
# Check if the column name contains a month in parentheses
if (grepl("\\(.*\\)", col_name)) {
# Extract the month name inside parentheses
month <- gsub(".*\\((.*)\\).*", "\\1", col_name)
# Get the corresponding month number
num_month <- match(tolower(month), tolower(months))
# Format the month number with leading zero if it's less than 10
formatted_month <- sprintf("%02d", num_month)
# Rename the column, removing spaces before adding the month number
new_name <- gsub("\\s+", "", gsub("\\(.*\\)", paste0("_", formatted_month), col_name))
names(data_frame)[names(data_frame) == col_name] <- new_name
}
}
return(data_frame)
}
for (yy in years) {
print(paste("Processing year:", yy))
# Assuming there's only one CSV file per folder, dynamically get the file name
dir_path <- file.path(base_path, as.character(yy))
csv_file <- list.files(dir_path, pattern = paste0("\\d{4}\\.csv"), full.names = TRUE)
if (!is_empty(csv_file)) {
df <- import(csv_file)
##str(df)
# Renaming columns to var_monthnum
df <- rename_month_columns(df)
colnames(df) <- tolower(colnames(df))
## Change col names
if (yy <= 2013) {
old_names <- c("empresa_generica", "tt", "id_division")
} else {
old_names <- c("empresa_generica", "tt", "division")
}
new_names <- c("id", "tamano", "div")
df <- df %>% rename_with(~new_names, all_of(old_names))
str(df)
# Initialize an empty dataframe for the stacked data
stacked_df <- data.frame()
for (month in MONTHS) {
month_num <- MONTHS_DICT[tolower(month)]
print(paste("Processing month:", month_num))
# Filter the columns for the current month
month_vars <- paste(VARS_OF_INTEREST, month_num, sep = "_")
print(month_vars)
stable_col = c("id", "tamano", "categoria", "sexo", "grupo", "div")
month_df <- df %>% select(stable_col, all_of(month_vars))
print("STR of month")
##str(month_df)
if (ncol(month_df) > 0) {
month_df$mes <- as.integer(month_num)
month_df$ano <- yy
# Rename the month-specific columns to generic names without the month number
month_df <- month_df %>% rename_with(~VARS_OF_INTEREST, all_of(month_vars))
# # Stack or concatenate this month's dataframe with the accumulated dataframe
stacked_df <- rbind(stacked_df, month_df)
##str(stacked_df)
}
}
print("Antes del subset")
str(stacked_df)
stacked_df <- subset(stacked_df, select = -c( re, he))
print("Post subset")
str(stacked_df)
stacked_df <- stacked_df[, c("ano", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "nt")]
# Write the combined dataframe to a new CSV file
write.csv(stacked_df, file = file.path(dir_path, paste0(yy, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
} else {
print(paste("File not found for year", yy))
}
}
print(DataBase)
install.packages("RODBC")
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
##install.packages("RODBC")
library(RODBC)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
##install.packages("RODBC")
library(RODBC)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- odbcConnectAccess(DataBase)
install.packages("odbc")
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
consult <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult)
odbcClose(connection)
Error in odbcConnectAccess(DataBase) : close
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
consult <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult)
odbcClose(connection)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
consult <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult)
odbcClose(connection)
# ##install.packages("RODBC")
# ###install.packages("odbc")
# ##library(RODBC)
# library(odbc)
#
#
# base_path <- "./wage rigidity/_data/_IRCMO"
#
# dir_path <- file.path(base_path, as.character(2016))
#
# DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
#
# print(DataBase)
#
#
# connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
#                            DBQ = DataBase)
#
# table_name <- "Año_2016"
#
# consult <- paste("SELECT * FROM", table_name)
#
# data <- dbGetQuery(connection, consult)
#
# odbcClose(connection)
#
# str(data)
# Instala y carga el paquete odbc si aún no lo has hecho
#install.packages("odbc")
library(odbc)
# Ruta al archivo .mdb
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
# Imprime la ruta del archivo de la base de datos Access
print(DataBase)
# Establece la conexión con la base de datos Access
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
# Nombre de la tabla que deseas cargar
table_name <- "Año_2016"
# Consulta SQL para seleccionar todos los datos de la tabla
consult <- paste("SELECT * FROM", table_name)
# Ejecutar la consulta y almacenar los resultados en un data frame
data <- dbGetQuery(connection, consult)
# Cierra la conexión
dbDisconnect(connection)
# Verificar la estructura y los primeros registros del data frame
str(data)
head(data)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
consult <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult)
dbDisconnect(connection)
str(data)
print(colnames(data))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
consult <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult)
dbDisconnect(connection)
str(data)
print(colnames(data))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_year <- paste("SELECT * FROM", table_name)
data <- dbGetQuery(connection, consult_year)
dbDisconnect(connection)
str(data)
print(colnames(data))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT * FROM
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
data <- dbGetQuery(connection, consult_instruction)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT * FROM
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
data <- dbGetQuery(connection, consult_instruction)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT *
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
data <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
str(data)
print(colnames(data))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT *
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
str(df)
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- subset(df, select = -cols_to_drop)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT *
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- subset(df, select = -cols_to_drop)
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
print(colnames(df))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT *
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
print(colnames(df))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
##consult_year <- paste(, table_name)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
print(colnames(df))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
print(colnames(df))
write.csv(stacked_df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
write.csv(df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
print(colnames(df))
colnames(df) <- tolower(colnames(df))
print(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
print(colnames(df))
previous_vars <- c("año", "tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~VARS_OF_INTEREST, all_of(month_vars))
