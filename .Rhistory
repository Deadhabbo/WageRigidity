ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
str(df)
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
library(tidyverse)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
write.csv(df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
library(tidyverse)
years <- 2016:2018
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
for (yy in years) {
year_str <- as.character(yy)
consult_instruction <-sprintf("SELECT Año_%s.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_%s
INNER JOIN Ponderadores ON Año_%s.Tamaño = Ponderadores.Tamaño
AND Año_%s.Categoría = Ponderadores.Categoría
AND Año_%s.Sexo = Ponderadores.Sexo
AND Año_%s.Grupo = Ponderadores.Grupo;", year_str, year_str, year_str, year_str, year_str, year_str )
print(consult_instruction)
}
# table_name <- "Año_2016"
# ponderators <- "Ponderadores"
dbDisconnect(connection)
# df <- dbGetQuery(connection, consult_instruction)
#
# dbDisconnect(connection)
#
#
# colnames(df) <- tolower(colnames(df))
#
#
# cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
#
# df <- df[, !names(df) %in% cols_to_drop]
#
#
# previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
# new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
#
# df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
# df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
#
# write.csv(df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
library(tidyverse)
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
table_name <- "Año_2016"
ponderators <- "Ponderadores"
consult_instruction <- "SELECT Año_2016.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_2016
INNER JOIN Ponderadores ON Año_2016.Tamaño = Ponderadores.Tamaño
AND Año_2016.Categoría = Ponderadores.Categoría
AND Año_2016.Sexo = Ponderadores.Sexo
AND Año_2016.Grupo = Ponderadores.Grupo;"
print(consult_instruction)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
write.csv(df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
library(tidyverse)
years <- 2016:2018
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
for (yy in years) {
year_str <- as.character(yy)
consult_instruction <-sprintf("SELECT Año_%s.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_%s
INNER JOIN Ponderadores ON Año_%s.Tamaño = Ponderadores.Tamaño
AND Año_%s.Categoría = Ponderadores.Categoría
AND Año_%s.Sexo = Ponderadores.Sexo
AND Año_%s.Grupo = Ponderadores.Grupo;", year_str, year_str, year_str, year_str, year_str, year_str)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
write.csv(df, file = file.path(dir_path, paste0(yy, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
}
library(odbc)
library(tidyverse)
years <- 2016:2018
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
for (yy in years) {
year_str <- as.character(yy)
consult_instruction <-sprintf("SELECT Año_%s.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_%s
INNER JOIN Ponderadores ON Año_%s.Tamaño = Ponderadores.Tamaño
AND Año_%s.Categoría = Ponderadores.Categoría
AND Año_%s.Sexo = Ponderadores.Sexo
AND Año_%s.Grupo = Ponderadores.Grupo;", year_str, year_str, year_str, year_str, year_str, year_str)
df <- dbGetQuery(connection, consult_instruction)
dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
write.csv(df, file = file.path(dir_path, paste0(yy, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
}
##install.packages("RODBC")
###install.packages("odbc")
##library(RODBC)
library(odbc)
library(tidyverse)
years <- 2016:2018
base_path <- "./wage rigidity/_data/_IRCMO"
dir_path <- file.path(base_path, as.character(2016))
DataBase <- list.files(dir_path, pattern = "Rectificada.MDB", full.names = TRUE)
print(DataBase)
connection <- dbConnect(odbc::odbc(), Driver = "Microsoft Access Driver (*.mdb, *.accdb)",
DBQ = DataBase)
for (yy in years) {
year_str <- as.character(yy)
consult_instruction <-sprintf("SELECT Año_%s.*,
Ponderadores.IR_Wtam,
Ponderadores.IR_Wcat,
Ponderadores.IR_Wsex,
Ponderadores.IR_Wgru,
Ponderadores.IR_Wi,
Ponderadores.ICMO_Wtam,
Ponderadores.ICMO_Wcat,
Ponderadores.ICMO_Wsex,
Ponderadores.ICMO_Wgru,
Ponderadores.ICMO_Wi
FROM Año_%s
INNER JOIN Ponderadores ON Año_%s.Tamaño = Ponderadores.Tamaño
AND Año_%s.Categoría = Ponderadores.Categoría
AND Año_%s.Sexo = Ponderadores.Sexo
AND Año_%s.Grupo = Ponderadores.Grupo;", year_str, year_str, year_str, year_str, year_str, year_str)
df <- dbGetQuery(connection, consult_instruction)
##dbDisconnect(connection)
colnames(df) <- tolower(colnames(df))
cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
df <- df[, !names(df) %in% cols_to_drop]
previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
write.csv(df, file = file.path(dir_path, paste0(yy, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
}
dbDisconnect(connection)
# table_name <- "Año_2016"
# ponderators <- "Ponderadores"
##dbDisconnect(connection)
# df <- dbGetQuery(connection, consult_instruction)
#
# dbDisconnect(connection)
#
#
# colnames(df) <- tolower(colnames(df))
#
#
# cols_to_drop = c("ro_t_1", "ho_t_1", "c_t_1", "ht_t_1")
#
# df <- df[, !names(df) %in% cols_to_drop]
#
#
# previous_vars <- c("año","id_empresa" ,"tamaño", "categoría", "división","ro_t", "ho_t", "ht_t", "c_t")
# new_var_names <- c("anio", "id" ,"tamano", "categoria", "div", "ro", "ho", "ht", "c")
#
# df <- df %>% rename_with(~new_var_names, all_of(previous_vars))
# df <- df[, c("anio", "mes", "id", "tamano", "categoria", "sexo", "grupo", "div", "ro", "ho", "c", "ht")]
#
# write.csv(df, file = file.path(dir_path, paste0(2016, "_combined_r.csv")), row.names = FALSE, quote = FALSE)
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month())
print(dir_path)
break
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(dir_path)
break
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
file_list <- list.files(dir_path, full.names = TRUE)
print(dir_path)
break
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
file_list <- list.files(dir_path, full.names = TRUE)
print(file_list)
break
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(month)
file_list <- list.files(dir_path, full.names = TRUE)
print(file_list)
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(month)
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print("Folders and files of %s", month)
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(sprintf("Folders and files of %s", month))
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(sprintf("Folders and files of %s:", month))
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
print(" ")
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(sprintf("Folders and files of %s:", month))
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
print("\n")
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(sprintf("Folders and files of %s:", month))
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
print()
}
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
print(sprintf("Folders and files of %s:", month))
file_list <- list.files(dir_path, full.names = TRUE)
for (file in file_list) {
print(file)
}
cat("\n")
}
# MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
#
#
# base_path <- "./wage rigidity/_data/_IRCMO/2019"
#
# for (month in MONTHS) {
#
#   dir_path <- file.path(base_path, month)
#   print(sprintf("Folders and files of %s:", month))
#   file_list <- list.files(dir_path, full.names = TRUE)
#
#   for (file in file_list) {
#     print(file)
#   }
#   cat("\n")
# }
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
sub_dirs <- list.dirs(dir_path, recursive = TRUE)
cat("Directorio:", dir_path, "\n")
for (sub_dir in sub_dirs) {
file_list <- list.files(sub_dir, full.names = TRUE)
cat("Subdirectorio:", sub_dir, "\n")
cat("Archivos:", "\n")
cat(file_list, "\n")
cat("\n")
}
}
# MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
#
#
# base_path <- "./wage rigidity/_data/_IRCMO/2019"
#
# for (month in MONTHS) {
#
#   dir_path <- file.path(base_path, month)
#   print(sprintf("Folders and files of %s:", month))
#   file_list <- list.files(dir_path, full.names = TRUE)
#
#   for (file in file_list) {
#     print(file)
#   }
#   cat("\n")
# }
MONTHS <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
base_path <- "./wage rigidity/_data/_IRCMO/2019"
for (month in MONTHS) {
dir_path <- file.path(base_path, month)
sub_dirs <- list.dirs(dir_path, recursive = TRUE)
cat("Directorio:", dir_path, "\n")
for (sub_dir in sub_dirs) {
file_list <- list.files(sub_dir, full.names = TRUE)
cat("Subdirectorio:", sub_dir, "\n")
cat("Archivos:", "\n")
cat(file_list, "\n")
cat("\n")
}
}
